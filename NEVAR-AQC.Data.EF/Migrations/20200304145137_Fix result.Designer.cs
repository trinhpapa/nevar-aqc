// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NEVAR_AQC.Data.EF;

namespace NEVAR_AQC.Data.EF.Migrations
{
    [DbContext(typeof(NEVARDbContext))]
    [Migration("20200304145137_Fix result")]
    partial class Fixresult
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGCustomerTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status");

                    b.HasKey("Id");

                    b.ToTable("CTGCustomerType");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGDepartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("CTGDepartment");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGFieldEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("Symbol")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("CTGField");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGRequirementStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("HtmlColour")
                        .HasMaxLength(6);

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("ProcessStatus")
                        .HasMaxLength(100);

                    b.Property<long?>("SYSUserEntityId");

                    b.Property<bool?>("Status");

                    b.HasKey("Id");

                    b.HasIndex("SYSUserEntityId");

                    b.ToTable("CTGRequirementStatus");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGRequirementTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(10);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("English")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("Symbol")
                        .HasMaxLength(10);

                    b.Property<string>("Vietnamese")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CTGRequirementType");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGReturnInvoiceResultTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status");

                    b.HasKey("Id");

                    b.ToTable("CTGReturnInvoiceResultType");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<bool?>("Status");

                    b.HasKey("Id");

                    b.ToTable("CTGRole");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGSystemFunctionEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("Key");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<int?>("Parent");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("CTGSystemFunction");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGTestMethodEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<bool>("Status");

                    b.Property<string>("SymbolAttached")
                        .HasMaxLength(10);

                    b.Property<long>("TestPropertyId");

                    b.HasKey("Id");

                    b.HasIndex("TestPropertyId");

                    b.ToTable("CTGTestMethod");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGTestObjectEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<long>("FieldId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("CTGTestObject");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGTestPropertyEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<long>("ObjectId");

                    b.Property<bool>("Status");

                    b.Property<string>("Unit")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.ToTable("CTGTestProperty");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDCalibrationRequirementEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Amount");

                    b.Property<string>("AmountUnit")
                        .HasMaxLength(50);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("NameOfMeasuringDevice")
                        .HasMaxLength(200);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<long>("RequirementInvoiceId");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(20);

                    b.Property<bool>("Status");

                    b.Property<string>("TechnicalCharacteristics")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RequirementInvoiceId");

                    b.ToTable("IDCalibrationRequirement");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRImplementerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool>("IsAccept");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<long>("SpecimenPropertyId");

                    b.Property<DateTime?>("TimeToReport");

                    b.Property<DateTime?>("TimeToStart");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("SpecimenPropertyId");

                    b.HasIndex("UserId");

                    b.ToTable("IDTRImplementer");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessAASUCVISAESMethodEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbsorbanceC1");

                    b.Property<string>("AbsorbanceC2");

                    b.Property<string>("AbsorbanceC3");

                    b.Property<string>("AbsorbanceC4");

                    b.Property<string>("AbsorbanceC5");

                    b.Property<string>("AbsorbanceC6");

                    b.Property<string>("AbsorbanceC7");

                    b.Property<string>("AverageResultsL");

                    b.Property<string>("AverageResultsT");

                    b.Property<string>("CalculationFormula");

                    b.Property<string>("CoefficientR2");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("DilutionCoefficientL1");

                    b.Property<string>("DilutionCoefficientL2");

                    b.Property<string>("DilutionCoefficientT1");

                    b.Property<string>("DilutionCoefficientT2");

                    b.Property<string>("ExtraStandardConcentration");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSubmitReport");

                    b.Property<string>("MeasurementResultsL1");

                    b.Property<string>("MeasurementResultsL2");

                    b.Property<string>("MeasurementResultsT1");

                    b.Property<string>("MeasurementResultsT2");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("PercentOfRevoke");

                    b.Property<string>("QuantumL1");

                    b.Property<string>("QuantumL2");

                    b.Property<string>("ReportResults");

                    b.Property<string>("ResultL1");

                    b.Property<string>("ResultL2");

                    b.Property<string>("ResultT1");

                    b.Property<string>("ResultT2");

                    b.Property<long>("SpecimenPropertyId");

                    b.Property<string>("StandardLineEquation");

                    b.Property<string>("SymbolC");

                    b.Property<string>("T1");

                    b.Property<string>("T2");

                    b.Property<DateTime>("TimeReportResults");

                    b.Property<string>("ValueC1");

                    b.Property<string>("ValueC2");

                    b.Property<string>("ValueC3");

                    b.Property<string>("ValueC4");

                    b.Property<string>("ValueC5");

                    b.Property<string>("ValueC6");

                    b.Property<string>("ValueC7");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenPropertyId");

                    b.ToTable("IDTRTestProcessAASUCVISAESMethod");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessOtherMethodEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSubmitReport");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("MonitoringData");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("ReportResults");

                    b.Property<long>("SpecimenPropertyId");

                    b.Property<DateTime>("TimeReportResults");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenPropertyId");

                    b.ToTable("IDTRTestProcessOtherMethod");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessVolumeMethodEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AverageResultsL");

                    b.Property<string>("AverageResultsT");

                    b.Property<string>("CalculationFormula");

                    b.Property<string>("ConcentrationOfSolution1");

                    b.Property<string>("ConcentrationOfSolution2");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("DilutionCoefficient");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSubmitReport");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("OtherMonitoringData");

                    b.Property<string>("PercentOfRevoke");

                    b.Property<string>("QuantumL1");

                    b.Property<string>("QuantumL2");

                    b.Property<string>("ReportResults");

                    b.Property<string>("ResultL1");

                    b.Property<string>("ResultL2");

                    b.Property<string>("ResultT1");

                    b.Property<string>("ResultT2");

                    b.Property<string>("SolutionName1");

                    b.Property<string>("SolutionName2");

                    b.Property<long>("SpecimenPropertyId");

                    b.Property<string>("T1");

                    b.Property<string>("T2");

                    b.Property<DateTime>("TimeReportResults");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenPropertyId");

                    b.ToTable("IDTRTestProcessVolumeMethod");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessWeightMethodEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AverageResultsL");

                    b.Property<string>("AverageResultsT");

                    b.Property<string>("CalculationFormula");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("DilutionCoefficientL1");

                    b.Property<string>("DilutionCoefficientL2");

                    b.Property<string>("DilutionCoefficientSymbolL1");

                    b.Property<string>("DilutionCoefficientSymbolL2");

                    b.Property<string>("DilutionCoefficientSymbolT1");

                    b.Property<string>("DilutionCoefficientSymbolT2");

                    b.Property<string>("DilutionCoefficientT1");

                    b.Property<string>("DilutionCoefficientT2");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSubmitReport");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("PercentOfRevoke");

                    b.Property<string>("QuantumL1");

                    b.Property<string>("QuantumL2");

                    b.Property<string>("ReportResults");

                    b.Property<string>("ResultL1");

                    b.Property<string>("ResultL2");

                    b.Property<string>("ResultSymbolL1");

                    b.Property<string>("ResultSymbolL2");

                    b.Property<string>("ResultSymbolT1");

                    b.Property<string>("ResultSymbolT2");

                    b.Property<string>("ResultT1");

                    b.Property<string>("ResultT2");

                    b.Property<long>("SpecimenPropertyId");

                    b.Property<string>("SymbolT1");

                    b.Property<string>("SymbolT2");

                    b.Property<DateTime>("TimeReportResults");

                    b.Property<string>("WeightOfCupAndSpecimenL1");

                    b.Property<string>("WeightOfCupAndSpecimenL2");

                    b.Property<string>("WeightOfCupAndSpecimenT1");

                    b.Property<string>("WeightOfCupAndSpecimenT2");

                    b.Property<string>("WeightOfCupL1");

                    b.Property<string>("WeightOfCupL2");

                    b.Property<string>("WeightOfCupT1");

                    b.Property<string>("WeightOfCupT2");

                    b.Property<string>("WeightOfScaleSymbolL1");

                    b.Property<string>("WeightOfScaleSymbolL2");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenPropertyId");

                    b.ToTable("IDTRTestProcessWeightMethod");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<int?>("OrderNumber");

                    b.Property<DateTime?>("PlanFromTime");

                    b.Property<DateTime?>("PlanToTime");

                    b.Property<long>("SpecimenId");

                    b.Property<long?>("TestMethodId");

                    b.Property<long?>("TestPropertyId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("SpecimenId");

                    b.HasIndex("TestMethodId");

                    b.HasIndex("TestPropertyId");

                    b.ToTable("IDTRTestProperty");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTestRequirementEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("ImageLink")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("InvoiceResultDate");

                    b.Property<string>("InvoiceResultNo");

                    b.Property<long?>("InvoiceResultSerial");

                    b.Property<int?>("InvoiceResultYear");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<long?>("ObjectId");

                    b.Property<long>("RequirementInvoiceId");

                    b.Property<int?>("SpecimenAmount");

                    b.Property<string>("SpecimenCode")
                        .HasMaxLength(100);

                    b.Property<string>("SpecimenName")
                        .HasMaxLength(200);

                    b.Property<int>("SpecimenOrder");

                    b.Property<string>("SpecimenQuantum");

                    b.Property<string>("SpecimenStatus");

                    b.Property<string>("SpecimenSymbol")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ObjectId");

                    b.HasIndex("RequirementInvoiceId");

                    b.ToTable("IDTestRequirement");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSCustomerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(1000);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<int?>("CustomerTypeId");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<int?>("DistrictId");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20);

                    b.Property<int?>("ProvinceId");

                    b.Property<int?>("WardsId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SYSCustomer");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSRequirementInvoiceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long>("CustomerId");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<int>("Edition");

                    b.Property<long?>("FieldId");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSaveSpecimen");

                    b.Property<bool>("IsUseSubcontractors");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("OtherInformation")
                        .HasMaxLength(200);

                    b.Property<string>("OtherRequirement")
                        .HasMaxLength(200);

                    b.Property<int>("ProcessStatusId");

                    b.Property<string>("Representative")
                        .HasMaxLength(100);

                    b.Property<string>("RepresentativePhone")
                        .HasMaxLength(20);

                    b.Property<int>("RequirementTypeId");

                    b.Property<DateTime?>("ResultDay");

                    b.Property<int>("ResultInvoiceAmount");

                    b.Property<int>("ReturnInvoiceResultTypeId");

                    b.Property<string>("SaveSpecimenTime");

                    b.Property<int?>("Serial");

                    b.Property<int?>("SerialYear");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("FieldId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProcessStatusId");

                    b.HasIndex("RequirementTypeId");

                    b.HasIndex("ReturnInvoiceResultTypeId");

                    b.ToTable("SYSRequirementInvoice");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSRoleFunctionEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<long>("FunctionId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RoleId");

                    b.ToTable("SYSRoleFunction");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<long?>("DeletedBy");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsDeleted");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("Note")
                        .HasMaxLength(100);

                    b.Property<string>("PasswordEncrypted")
                        .HasMaxLength(100);

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(10);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20);

                    b.Property<int>("RoleId");

                    b.Property<string>("SignalRId")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("SYSUser");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGRequirementStatusEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "SYSUserEntity")
                        .WithMany()
                        .HasForeignKey("SYSUserEntityId");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGRequirementTypeEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.CTGDepartmentEntity", "CTGDepartmentEntity")
                        .WithMany("CTGRequirementTypeEntities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGTestMethodEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.CTGTestPropertyEntity", "CTGTestPropertyEntity")
                        .WithMany("CTGTestMethodEntities")
                        .HasForeignKey("TestPropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGTestObjectEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.CTGFieldEntity", "CTGFieldEntity")
                        .WithMany("CTGTestObjectEntities")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.CTGTestPropertyEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.CTGTestObjectEntity", "CTGTestObjectEntity")
                        .WithMany("CTGTestPropertyEntities")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDCalibrationRequirementEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSRequirementInvoiceEntity", "SYSRequirementInvoiceEntity")
                        .WithMany("IDCalibrationRequirementEntities")
                        .HasForeignKey("RequirementInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRImplementerEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", "IDTRTestPropertyEntity")
                        .WithMany("IDTRImplementerEntities")
                        .HasForeignKey("SpecimenPropertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "SYSUserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessAASUCVISAESMethodEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", "IDTRTestPropertyEntity")
                        .WithMany("IDTRTestProcessAASUCVISAESMethodEntities")
                        .HasForeignKey("SpecimenPropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessOtherMethodEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", "IDTRTestPropertyEntity")
                        .WithMany("IDTRTestProcessOtherMethodEntities")
                        .HasForeignKey("SpecimenPropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessVolumeMethodEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", "IDTRTestPropertyEntity")
                        .WithMany("IDTRTestProcessVolumeMethodEntities")
                        .HasForeignKey("SpecimenPropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestProcessWeightMethodEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", "IDTRTestPropertyEntity")
                        .WithMany("IDTRTestProcessWeightMethodEntities")
                        .HasForeignKey("SpecimenPropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTRTestPropertyEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.IDTestRequirementEntity", "IDTestRequirementEntity")
                        .WithMany("IDTRTestPropertyEntities")
                        .HasForeignKey("SpecimenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGTestMethodEntity", "CTGTestMethodEntity")
                        .WithMany("IDTRTestPropertyEntities")
                        .HasForeignKey("TestMethodId");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGTestPropertyEntity", "CTGTestPropertyEntity")
                        .WithMany("IDTRTestPropertyEntities")
                        .HasForeignKey("TestPropertyId");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.IDTestRequirementEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGTestObjectEntity", "CTGTestObjectEntity")
                        .WithMany("IDTestRequirementEntities")
                        .HasForeignKey("ObjectId");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSRequirementInvoiceEntity", "SYSRequirementInvoiceEntity")
                        .WithMany("IDTestRequirementEntities")
                        .HasForeignKey("RequirementInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSCustomerEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGCustomerTypeEntity", "CTGCustomerTypeEntity")
                        .WithMany("SYSCustomerEntities")
                        .HasForeignKey("CustomerTypeId");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSRequirementInvoiceEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSCustomerEntity", "SYSCustomerEntity")
                        .WithMany("SYSRequirementInvoiceEntities")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGFieldEntity", "CTGFieldEntity")
                        .WithMany("RequirementInvoiceEntities")
                        .HasForeignKey("FieldId");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGRequirementStatusEntity", "CTGRequirementStatusEntity")
                        .WithMany("SYSRequirementInvoiceEntities")
                        .HasForeignKey("ProcessStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGRequirementTypeEntity", "CTGRequirementTypeEntity")
                        .WithMany("SYSRequirementInvoiceEntities")
                        .HasForeignKey("RequirementTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGReturnInvoiceResultTypeEntity", "CTGReturnInvoiceResultTypeEntity")
                        .WithMany("SYSRequirementInvoiceEntities")
                        .HasForeignKey("ReturnInvoiceResultTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSRoleFunctionEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "CRESYSUserEntity")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "DELSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGSystemFunctionEntity", "CTGSystemFunctionEntity")
                        .WithMany("SYSRoleFunctionEntities")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.SYSUserEntity", "MODSYSUserEntity")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGRoleEntity", "CTGRoleEntity")
                        .WithMany("SYSRoleFunctionEntities")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NEVAR_AQC.Core.Entities.SYSUserEntity", b =>
                {
                    b.HasOne("NEVAR_AQC.Core.Entities.CTGDepartmentEntity", "CTGDepartmentEntity")
                        .WithMany("SYSUserEntities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NEVAR_AQC.Core.Entities.CTGRoleEntity", "CTGRoleEntity")
                        .WithMany("SYSUserEntities")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
